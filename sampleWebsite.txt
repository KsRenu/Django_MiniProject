Terminal:
cmd:1

C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite>py -3 -m venv .venv

C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite

cmd:2

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite>python -m pip install django

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite>django-admin startproject mysite 

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite>python manage.py startapp myapp

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite>cd mysite

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py startapp myapp

views.py>myapp
from django.shortcuts import render

# Create your views here.
from django.http import HttpResponse
def index(Respone):
    return HttpResponse("Hello World!!!")



create urls.py > myapp
from django.urls import path
from . import views
urlpatterns=[
    path('',views.index,name='index')
]



urls.py>mysite
from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('app/',include('myapp.urls')),
    path('admin/', admin.site.urls),
]




ssettings.py>mysite
"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2xv#vce9pz*dj2y4%@7k*9$%thm^b1jsy9^$obkzg!d$02-b@w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp.apps.MyappConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'









models.py>myapp
from django.db import models

# Create your models here.
class Book(models.Model):
    title=models.CharField(max_length=200)
    pub_date=models.DateTimeField('date published')



admin.py>myapp
from django.contrib import admin

# Register your models here.
from .models import Book
admin.site.register(Book)

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py migrate

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py makemigrations        

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py sqlmigrate myapp 0001

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py migrate myapp

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py createsuperuser





after lots of runserver,username etc


urls.py>myapp
from django.urls import path
from . import views
urlpatterns=[
    path('',views.index,name='index')
    path('book/<int:book_id>',views.book_by_id,name='book_by_id'),
]



views.py>myapp
from django.shortcuts import render

# Create your views here.
from django.http import HttpResponse
def index(Respone):
    return HttpResponse("Hello World!!!")

def book_by_id(request,book_id):
    book=Book.objects.get(pk=book_id)
    return HttpResponse(f"Book: {book.title}, published on {book.pub_date}")


create template>myapp
book_details.html
<p>Book:{{ book.title}}</p>
<p>Published on {{book.pub_date}}</p>



views.py>myapp
from django.shortcuts import render

# Create your views here.
from django.http import HttpResponse

from .models import Book

def index(Respone):
    return HttpResponse("Hello World!!!")

def book_by_id(request,book_id):
    book=Book.objects.get(pk=book_id)
    #return HttpResponse(f"Book: {book.title}, published on {book.pub_date}")
    return render(request,'book_details.html',{'book':book})





(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>python manage.py runserver

(.venv) C:\Users\Admin\OneDrive\Desktop\github\simpleWebsite\mysite>


link : https://www.youtube.com/watch?v=ZsJRXS_vrw0&t=230s